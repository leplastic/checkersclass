<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Checkers</name>
    </assembly>
    <members>
        <member name="T:Softklin.Checkers.GameLog">
            <summary>
            Represents a full game log
            </summary>
        </member>
        <member name="M:Softklin.Checkers.GameLog.#ctor">
            <summary>
            Creates a new game log
            </summary>
        </member>
        <member name="M:Softklin.Checkers.GameLog.logEvent(Softklin.Checkers.GameLogEntry)">
            <summary>
            Adds a new log entry
            </summary>
            <param name="glo">The log entry to add</param>
        </member>
        <member name="M:Softklin.Checkers.GameLog.getAllEntries">
            <summary>
            Returns a complete copy of the log
            </summary>
            <returns>Entire log of the game</returns>
        </member>
        <member name="T:Softklin.Checkers.GameLogEntry">
            <summary>
            Represents an entry in the game log
            </summary>
        </member>
        <member name="T:Softklin.Checkers.LogEntryType">
            <summary>
            Type of game log entry
            </summary>
        </member>
        <member name="T:Softklin.Checkers.Player">
            <summary>
            Represents a player in checkers game
            </summary>
        </member>
        <member name="M:Softklin.Checkers.Player.#ctor(System.String,System.String)">
            <summary>
            Creates a new player
            </summary>
            <param name="nickname">The player's nickname</param>
            <param name="realName">The player's real name</param>
            <example>Player p = new Player("mycoolnick", "John Big");</example>
        </member>
        <member name="P:Softklin.Checkers.Player.Nickname">
            <summary>
            The player's nickname
            </summary>
        </member>
        <member name="P:Softklin.Checkers.Player.RealName">
            <summary>
            The player's real name
            </summary>
        </member>
        <member name="T:Softklin.Checkers.Board">
            <summary>
            Represents a game board for checkers game
            </summary>
        </member>
        <member name="M:Softklin.Checkers.Board.#ctor(System.Collections.Generic.List{Softklin.Checkers.Player})">
            <summary>
            Creates a new checkers board
            </summary>
            <param name="players">The player list</param>
        </member>
        <member name="M:Softklin.Checkers.Board.populateBoard">
            <summary>
            Populates the board with the pieces
            </summary>
        </member>
        <member name="T:Softklin.Checkers.Piece">
            <summary>
            Represents a piece in checkers game
            </summary>
        </member>
        <member name="M:Softklin.Checkers.Piece.#ctor(Softklin.Checkers.Player)">
            <summary>
            Creates a new piece
            </summary>
            <param name="owner">The player who owns this piece</param>
        </member>
        <member name="P:Softklin.Checkers.Piece.OwnerPlayer">
            <summary>
            Gets the player how owns the current piece [read-only]
            </summary>
        </member>
        <member name="P:Softklin.Checkers.Piece.Queen">
            <summary>
            Indicates whenever the current piece is queen
            </summary>
        </member>
        <member name="T:Softklin.Checkers.Score">
            <summary>
            Represents a score card for the game with nr of victores, draws and defeats
            </summary>
        </member>
        <member name="M:Softklin.Checkers.Score.#ctor">
            <summary>
            Creates a new score card
            </summary>
        </member>
        <member name="M:Softklin.Checkers.Score.addPlayer(Softklin.Checkers.Player)">
            <summary>
            Adds a player to the score card.
            </summary>
            <param name="player">The player to add</param>
            <remarks>
            Each player starts with 0 (zero) points.
            If the player is already in the score card, nothing is done.
            If the score card is locked, the player won't be added.
            </remarks>
        </member>
        <member name="M:Softklin.Checkers.Score.addScore(Softklin.Checkers.Player,Softklin.Checkers.ScoreType)">
            <summary>
            Sets a victory, draw or defeat to the player's score
            </summary>
            <param name="player">The player</param>
            <param name="type">Score type to assign</param>
            <remarks>
            To assign multiple scores of one type, see the overload method with the count parameter.
            </remarks>
        </member>
        <member name="M:Softklin.Checkers.Score.addScore(Softklin.Checkers.Player,Softklin.Checkers.ScoreType,System.Int32)">
            <summary>
            Sets a victory, draw or defeat to the player's score
            </summary>
            <param name="player">The player</param>
            <param name="type">Score type to assign</param>
            <param name="count">Number of times to add the score</param>
        </member>
        <member name="M:Softklin.Checkers.Score.mergeScores(Softklin.Checkers.Score)">
            <summary>
            Merges two score cards and returns the new one
            </summary>
            <param name="otherScore">The other score card</param>
            <returns>New core card with the result of merge</returns>
            <remarks>
            The score cards won't be modified.
            Instead, a new score card will be created, and the results copied to the new one
            </remarks>
        </member>
        <member name="P:Softklin.Checkers.Score.LockedScores">
            <summary>
            Indicates whenever the score card it's locked or not.
            A locked score card means that any scores added will be ignored
            </summary>
        </member>
        <member name="P:Softklin.Checkers.Score.Item(Softklin.Checkers.Player)">
            <summary>
            Gets the curent score for a player
            </summary>
            <param name="p">The player</param>
            <returns>Player's score</returns>
        </member>
        <member name="T:Softklin.Checkers.ScoreType">
            <summary>
            Represents score types for the score card
            </summary>
        </member>
        <member name="F:Softklin.Checkers.ScoreType.VICTORY">
            <summary>
            Represents a player's victory
            </summary>
        </member>
        <member name="F:Softklin.Checkers.ScoreType.DRAW">
            <summary>
            Represents a player's draw
            </summary>
        </member>
        <member name="F:Softklin.Checkers.ScoreType.DEFEAT">
            <summary>
            Represents a player's defeat
            </summary>
        </member>
        <member name="T:Softklin.Checkers.Game">
            <summary>
            Represents a single checkers game
            </summary>
        </member>
        <member name="M:Softklin.Checkers.Game.#ctor(Softklin.Checkers.Player,Softklin.Checkers.Player)">
            <summary>
            Creates a new game with two players
            </summary>
            <param name="player1">The player 1</param>
            <param name="player2">The player 2</param>
        </member>
        <member name="T:Softklin.Checkers.CheckersGameException">
            <summary>
            Checkers Game Exception
            </summary>
        </member>
    </members>
</doc>
